;; Analyzed by ClojureScript 0.0-3308
{:use-macros {go-loop cljs.core.async.macros}, :excludes #{}, :name rente.client.app, :imports nil, :requires {reagent reagent.core, rente.client.handlers rente.client.handlers, rente.client.views rente.client.views, rente.client.subs rente.client.subs, views rente.client.views, reagent.core reagent.core, routes rente.client.routes, ws rente.client.ws, rente.client.ws rente.client.ws, jayq.core jayq.core, re-frame re-frame.core, rente.client.routes rente.client.routes, re-frame.core re-frame.core}, :uses {delegate jayq.core, $ jayq.core}, :defs {parseinit {:protocol-inline nil, :meta {:file "/mnt/big/dok/dev/cs/rente/src/rente/client/app.cljs", :line 12, :column 7, :end-line 12, :end-column 16, :arglists (quote ([]))}, :name rente.client.app/parseinit, :variadic false, :file "src/rente/client/app.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, state {:name rente.client.app/state, :file "src/rente/client/app.cljs", :line 16, :column 1, :end-line 16, :end-column 15, :meta {:file "/mnt/big/dok/dev/cs/rente/src/rente/client/app.cljs", :line 16, :column 10, :end-line 16, :end-column 15}}, handle-event {:name rente.client.app/handle-event, :file "src/rente/client/app.cljs", :line 20, :column 1, :end-line 20, :end-column 23, :meta {:file "/mnt/big/dok/dev/cs/rente/src/rente/client/app.cljs", :line 20, :column 11, :end-line 20, :end-column 23}}, app {:protocol-inline nil, :meta {:file "/mnt/big/dok/dev/cs/rente/src/rente/client/app.cljs", :line 26, :column 7, :end-line 26, :end-column 10, :arglists (quote ([data]))}, :name rente.client.app/app, :variadic false, :file "src/rente/client/app.cljs", :end-column 10, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}, mount-root {:protocol-inline nil, :meta {:file "/mnt/big/dok/dev/cs/rente/src/rente/client/app.cljs", :line 30, :column 7, :end-line 30, :end-column 17, :arglists (quote ([]))}, :name rente.client.app/mount-root, :variadic false, :file "src/rente/client/app.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, $body {:name rente.client.app/$body, :file "src/rente/client/app.cljs", :line 34, :column 1, :end-line 34, :end-column 11, :meta {:file "/mnt/big/dok/dev/cs/rente/src/rente/client/app.cljs", :line 34, :column 6, :end-line 34, :end-column 11}}, main {:protocol-inline nil, :meta {:file "/mnt/big/dok/dev/cs/rente/src/rente/client/app.cljs", :line 36, :column 16, :end-line 36, :end-column 20, :export true, :arglists (quote ([]))}, :name rente.client.app/main, :variadic false, :file "src/rente/client/app.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:initialize-db :default :title :re-render-flip :messages :hierarchy :body}, :order [:title :messages :re-render-flip :hierarchy :default :body :initialize-db]}, :doc nil}